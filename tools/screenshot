#!/usr/bin/env ruby

require 'chunky_png'
require 'fileutils'

file   = ARGV.shift
hex    = File.read(file).split(/[\r\n]+/).join
png    = ChunkyPNG::Image.new(480, 320, ChunkyPNG::Color::BLACK)
pixels = hex.bytes.each_slice(6).entries

# build rgba from 5:6:5, 16 bit colorspace
rgba = pixels.map do |rgb|
  rgb.each_slice(2).map.with_index do |c, n|
    (([c.map(&:chr).join].pack("H*").ord * 255.0) / (n == 1 ? 63 : 31)).round(0).to_i
  end
end

for row in 1..320
  for col in 1..480
    idx = (row - 1) * 480 + (col - 1)
    png[col - 1, row - 1] = ChunkyPNG::Color.rgba(rgba[idx][0], rgba[idx][1], rgba[idx][2], 255)
  end
end

png.save(file.sub(/.hex$/, '.png'), interlace: true)
FileUtils.rm_f(file)
